#!/bin/bash
# Simple script to output battery level

#Thinkpad fix -> Always shows 2 batteries and switches them up
unavailable=$(acpi -b | grep "unavailable" | awk '{print substr($2, 1, length($2)-1)}')
if [ "$unavailable" = "0" ]; then
  bat_number="1"
else
  bat_number="0"
fi

acpi=$(acpi -b 2>/dev/null| grep "Battery $bat_number")
ac_adapt=$(acpi -a | awk '{print $3}')
mode=$(echo "$acpi" | awk '{print $3}')
percent=$(echo "$acpi" | grep -Eo '[0-9]*' | sed -n 2p)
remaining=$(echo "$acpi" | awk '{print $5}')
symbol=' '

#echo "BAT $bat_number | AC $ac_adapt | Mode $mode | % $percent"

function getCorrectSymbol() {
  if [ "$percent" -lt 5 ]; then
    symbol=' '
  elif [ "$percent" -lt 10 ]; then
    symbol=' '
  elif [ "$percent" -lt 20 ]; then
    symbol=' '
  elif [ "$percent" -lt 30 ]; then
    symbol=' '
  elif [ "$percent" -lt 40 ]; then
    symbol=' '
  elif [ "$percent" -lt 50 ]; then
    symbol=' '
  elif [ "$percent" -lt 60 ]; then
    symbol=' '
  elif [ "$percent" -lt 70 ]; then
    symbol=' '
  elif [ "$percent" -lt 80 ]; then
    symbol=' '
  elif [ "$percent" -lt 90 ]; then
    symbol=' '
  else
    symbol=' '
  fi
}

if [ "$ac_adapt" = "on-line" ]; then
  symbol=' '
elif [ "$ac_adapt" = "off-line" ]; then
  if [ "$mode" = "Discharging," ]; then
    getCorrectSymbol
  elif [ "$mode" = "Charging," ]; then
    symbol=' '
  elif [ "$mode" = "Unknown," ]; then
    getCorrectSymbol
  fi
fi

printf "%s" "$symbol"

if [ "$percent" -lt 20 ]; then
  printf "%%{F#ed0b0b}"
elif [ "$percent" -lt 50 ]; then
  printf "%%{F#f2e421}";
fi

printf "$percent%%"

if [ "$mode" = "Discharging," ] || [ "$mode" = "Charging," ] || [ "$ac_adapt" = "off-line," ]; then
  echo " ($remaining)"
fi
